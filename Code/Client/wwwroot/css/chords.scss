$chordColor: var(--bs-primary);
$fingeringColor: var(--bs-primary);
$rhythmDelimiterColor: #6c757d;
$rhythmStrokeColor: var(--bs-dark);
$rhythmLightColor: var(--bs-gray-dark);
$rhythmRestColor: var(--bs-gray-400);
$tabTuningNoteColor: var(--bs-primary);
$anchorTextColor: var(--bs-info-text-emphasis);
$separatorColor: #6c757d;

@mixin bracket {
	//bracket
	//$bracket-color: #8080808f;
	$bracket-color: #B8B8B8;
	display: inline;
	background-image: linear-gradient($bracket-color, $bracket-color), linear-gradient($bracket-color, $bracket-color);
	background-repeat: no-repeat;
	background-size: 0.4em 3px;
	background-position: top left, bottom left;
	border: solid $bracket-color;
	border-width: 0 0 0 3px;
}

@mixin controls {
	background-color: var(--bs-body-bg);
	z-index: 10;
	display: flex;
	flex-direction: row;
	align-items: center;
	align-self: stretch;
	font-size: 1rem;

	&:has(.dropdown-menu.show) {
		z-index: 20;
	}
}

@font-face {
	font-family: 'Fira Code';
	src: url('fonts/FiraCode-Regular.woff2') format('woff'), url('fonts/FiraCode-Regular.ttf') format('truetype');
}

.chord-sheet-wrapper {
	position: relative;
	display: flex;
	flex-direction: row;
	font-family: 'Fira Code', monospace;
	line-height: 1.1em;
	padding-bottom: 8rem;
	font-size: calc(0.01rem * var(--font-percent));
	overflow-x: auto;
	scroll-padding: 0 6rem;

	.calculator {
		position: absolute;
		top: 0;
		visibility: hidden;
		height: 0;
		width: 1ch;
	}
}


.btn.btn-tiny {
	--bs-btn-font-size: .6rem;
	padding: 0.3rem 0.7rem;
}

.chord-sheet {
	//font-family: 'Fira Code', monospace;
	flex-grow: 1;
	display: grid;
	grid-template-columns: min-content auto;
	grid-gap: 0.4rem 0.2rem;
	align-items: baseline;
	padding: 1px 0;

	&.refreshing {
		caret-color: transparent;
	}

	.segment:not(:first-child) {
		margin-top: 1em;
	}

	.segment-title, .segment-title-bracket {
		font-weight: bold;
		font-size: 1.2em;
	}

	&.chord-sheet-editor {
		.line {
			width: fit-content;
		}
	}

	&:not(.chord-sheet-editor) .segment-title-bracket {
		display: inline-block;
		width: 1px !important;
		height: 1px !important;
		padding: 0 !important;
		margin: -1px !important;
		overflow: hidden !important;
		clip: rect(0,0,0,0) !important;
		white-space: nowrap !important;
		border: 0 !important;
	}

	.metaline {
		display: contents;
		flex-direction: row;
		justify-items: stretch;
		overflow: visible;

		.metaline-controls {
			@include controls;
			grid-column: 1;
			align-self: stretch;
			position: sticky;
			left: 0px;
			border-right: 1rem solid var(--bs-body-bg);
			margin-right: -1rem;

			.metaline-bracket {
				@include bracket;
				height: 100%;
				width: 6px;
				margin-right: -9px;
			}

			.line-type {
				margin-left: 9px;
			}
		}

		.metaline-lines {
			grid-column: 2;
			display: grid;
			grid-template-columns: min-content auto;
			grid-gap: 0 0.2rem;
			padding: 0.3rem 0.3rem 0.3rem 0;
			align-items: baseline;
			overflow: visible;

			.line-controls {
				@include controls;
				grid-column: 1;
				position: sticky;
				left: calc(1.6rem + 2ch);

				.line-type {
					.btn {
						width: 100%;
					}
				}
			}

			.line {
				grid-column: 2;
				margin: 0 0 0 calc(var(--line-indentation) * 1ch);
				padding: 0;
				overflow: visible;
				white-space: pre;
			}
		}
	}

	.metaline.metaline-blocks {
		display: flex;
		flex-direction: row;
		flex-wrap: wrap;
		align-items: baseline;
		overflow-x: hidden;

		.block {
			overflow-y: hidden;
		}
	}

	.line.line-empty {
		display: inline-block;
	}
	/*.line.line-empty::after, .line:empty::after {
		//content: '\A';
		content: ' ';
	}*/

	.line {
		.chord {
			color: $chordColor;
			position: relative;

			.accidental:not(:empty) {
				display: inline-block;
				width: 1ch;
			}

			.chord-alteration {
				.alteration-modifier:not(:empty) {
					&[data-modifier='#'] {
						display: inline-block;
						width: 1ch;
					}

					&[data-modifier='b'] {
						display: inline-block;
						width: 1ch;
					}
				}
			}

			.chord-root {
				font-weight: bold;
			}

			.chord-alterations {
				vertical-align: super;
			}

			.chord-alteration-separator, .chord-bass-separator {
				color: $separatorColor;
			}
		}

		.fingering {
			color: $fingeringColor;
			position: relative;
		}

		.rhythm-pattern {
			.rhythm-pattern-delimiter {
				color: $separatorColor;
			}

			.rhythm-pattern-stroke {
				//display: inline-block;
				//width: 1ch;
				text-align: center;
				vertical-align: middle;
				color: $rhythmStrokeColor;

				&[data-stroke^='Light'] {
					color: $rhythmLightColor;
				}

				&[data-stroke='None'] {
					//color: $rhythmRestColor;
					background-image: radial-gradient($rhythmRestColor 0.15em, transparent 0);
					background-size: 1ch 1ch;
					background-repeat: no-repeat;
					background-position: center;
				}

				&.stroke-note, .stroke-note {
					line-height: 3em;

					&::before {
						content: var(--note-content, ' ');
						position: relative;
						display: inline-block;
						width: 0;
						top: -1em;
						left: -1ch;
					}

					&[data-note='1']::before {
						content: '𝅝';
					}

					&[data-note='2']::before {
						content: '𝅗𝅥';
					}

					&[data-note='4']::before {
						content: '𝅘𝅥';
					}

					&[data-note='8']::before {
						content: '𝅘𝅥𝅮';
					}

					&[data-note='16']::before {
						content: '𝅘𝅥𝅯';
					}

					&[data-note='32']::before {
						content: '𝅘𝅥𝅰';
					}
				}

				&.stroke-length, .stroke-length {
					&::after {
						content: '' var(--stroke-length);
						display: inline-block;
						width: 0;
						position: relative;
						top: 1em;
						left: -1ch;
					}
				}
			}
		}

		.anchor-text {
			text-decoration: underline;
		}
	}

	.line.line-tab {
		.tab-tuning-note {
			color: $tabTuningNoteColor;
			font-weight: bold;
		}

		& > * {
			//display: inline-block;
			//width: calc(var(--tab-note-width)* 1ch);
			//letter-spacing: calc(var(--tab-note-width) * 0.5ch);
			margin: 0 0.2em;
			padding: 0 calc(var(--tab-padding) * 0.5ch);

			&.tab-note, &.tab-tuning-note {
				letter-spacing: calc(var(--tab-suffix-length, 0) * 1ch);
				position: relative;

				&::before {
					content: var(--tab-prefix);
					position: absolute;
					right: 0ch;
					letter-spacing: 0;
				}

				&::after {
					content: var(--tab-suffix);
					position: absolute;
					left: 1ch;
					letter-spacing: 0;
				}
			}

			*[style*="--tab-suffix"], &.suffix {
				user-select: all;
			}
		}

		.bar-line {
			/*.bar-line-content {
				display: none;
			}

			&:before {
				content: '|';
			}*/
		}
	}

	.attachment {
		.drag-handle {
			display: none;
			cursor: move;
			position: absolute;
			top: 0;
			left: 0;
			color: transparent;

			&:after {
				content: var(--content);
			}
		}

		&:active .drag-handle {
			display: inline-block;
		}

		&.text {
			text-decoration: underline;
		}
	}
}

.chord-sheet-wrapper /*:has(.custom-selection.custom-selection-box)*/ {
	[data-selection='box'] {
		/*@supports not (selector(::-moz-selection)) {
			::selection {
				background-color: transparent;
			}
		}*/

		::selection {
			background-color: transparent;
		}
	}
}

.chord-sheet-wrapper:has(.custom-selection.custom-selection-box) {
	[data-selection='box'] {
		caret-color: transparent;
	}
}

.chord-sheet.no-chords {
	.line.line-chords {
		display: none;
	}

	.chord {
		display: none;
	}
}

.chord-sheet-wrapper.debug {
	&.autofit .chord-sheet {
		.line {
			box-shadow: calc((var(--characters) - var(--line-indentation)) * 1ch) 0 0 #ff6a0024 inset;
		}
	}

	.chord-sheet {
		.line.line-text {
			.anchor-text, .text, .chord, .fingering, .rhythm-pattern {
				box-shadow: -0.5px 0 0 0px red, 0.5px 0 0 0px green;
				/*border-left: 1px dotted red;
				border-right: 1px dotted green;
				margin-left: -1px;
				margin-right: -1px;*/
			}

			.word {
				box-shadow: 0 0 0 1px black;
				/*border-left: 1px solid black;
				border-right: 1px solid black;
				margin-left: -1px;
				margin-right: -1px;*/

				.word-component {
					box-shadow: -0.5px 0 0 0px red, 0.5px 0 0 0px green;
					/*border-left: 1px dotted red;
					border-right: 1px dotted green;
					margin-left: -1px;
					margin-right: -1px;*/
				}
			}
		}

		.breakpoint {
			border-left: 1px solid blue;
			margin-left: -1px;
		}
	}

	[data-selection='box'] {
		::selection {
			background-color: #33ff3333;
			//opacity: 0.3;
		}
	}

	&:has(.custom-selection.custom-selection-box) {
		[data-selection='box'] {
			caret-color: green;
		}
	}
}

.custom-selection {
	position: absolute;
	pointer-events: none;
	z-index: 5;
	background-color: var(--bs-primary);
	opacity: 0.3;
	display: none;

	&.custom-selection-box {
		display: block;
		border: 1px solid black;
	}
}
